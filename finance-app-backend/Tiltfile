# -*- mode: Python -*-

# Load the helm_remote extension so we can create services from remote Helm charts
load("ext://helm_remote", "helm_remote")

# Load the kim_build extension so we can build images using nerdctl
load('ext://nerdctl', 'nerdctl_build')

# Load the 'configmap' extension
load('ext://configmap', 'configmap_create')

# Load the namespace extension
load('ext://namespace', 'namespace_create', 'namespace_inject')


# Function to build and deploy: cert-manager
def cert_manager():
    # Specify the Kubernetes manifest for the deployment
    helm_remote(
        'cert-manager',
        repo_url='https://charts.jetstack.io',
        version='v1.14.5',
        set=[
            'installCRDs=true',  # Automatically install and manage CRDs as part of the Helm release
        ]
    )

# Function to build and deploy: postgres service
def postgresql_service():
    # Specify the Kubernetes manifest for the deployment
    k8s_yaml([
        './devops/k8s/db-namespace.yaml',
        './devops/k8s/database-service.yaml',
        './devops/k8s/database-deployment.yaml',
        './devops/k8s/database-secret.yaml'
    ])
    k8s_resource(
        'postgresql-deployment',
        port_forwards=5432,
        resource_deps=['cert-manager']
    )

def backend_service():
    # Specify the Kubernetes manifest for the deployment
    nerdctl_build(
        'local/finance-app-backend',
        dockerfile='./Dockerfile',
        context='./',
        ignore=['.git', 'src', '.idea'],
        live_update=[sync('./target/classes', '/app')]
    )
    k8s_yaml([
        './devops/k8s/backend-deployment.yaml',
        './devops/k8s/backend-service.yaml',
        './devops/k8s/api-ingress.yaml'
    ])
    k8s_resource(
        'finance-app-deployment',
        links=['api.local.gd'],
        resource_deps=['postgresql-deployment']
    )

def flyway_service():
    nerdctl_build(
        'local/finance-app-migration',
        context='./',
        dockerfile='./DockerfileFlyway'
    )
    k8s_yaml([
        './devops/k8s/api-namespace.yaml',
        './devops/k8s/database-job.yaml'
    ])
    k8s_resource(
        'database-migration',
        resource_deps=['postgresql-deployment']
    )


cert_manager()
postgresql_service()
flyway_service()
#backend_service()
