extend type Query {
    findInvoice(creditCardId: Int, yearMonth: YearMonth): InvoiceDTO
}

extend type Mutation {
    saveCreditCard(newCreditCard: NewCreditCardDTO!): CreditCardDTO
    saveCreditCardTransaction(newTransaction: NewTransactionDTO!): TransactionDTO
}

input NewTransactionDTO {
    description: String!
    amount: BigDecimal!
    type: String!
    date: LocalDateTime!
    category: String
    installmentAmount: Int!
    creditCardId: Int
}

input NewCreditCardDTO {
    title: String!
    description: String!
    invoiceClosingDay: Int!
    color: String
    number: String
}

type CreditCardDTO {
    id: Int!
    userId: ID!
    title: String!
    description: String!
    invoiceClosingDay: Int!
    totalInvoiceAmount: BigDecimal
    color: String
    number: String
    invoices: [InvoiceDTO]
}

type InvoiceDTO {
    id: Int!
    creditCardId: Int!
    transactions: [TransactionDTO]
    isClosed: Boolean
    yearMonth: YearMonth
}