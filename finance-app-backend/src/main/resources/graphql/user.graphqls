extend type Query {
    getBalance(yearMonth: YearMonth!): UserBalanceDTO
}

extend type Mutation {
    saveTransaction(newTransaction: NewTransactionDTO!): TransactionDTO
}

type UserBalanceDTO {
    transactions: [TransactionDTO]
    creditCards: [CreditCardDTO]
    lastAddedTransactions: [TransactionDTO]!
    salary: BigDecimal
    expenses: BigDecimal
    available: BigDecimal
    taxValue: BigDecimal
    exchangeTaxValue: BigDecimal
    nonConvertedSalary: BigDecimal
    monthClosures: [MonthClosureDTO]
}

type TransactionDTO {
    id: Int!,
    description: String!
    amount: BigDecimal!
    type: String!
    date: LocalDateTime!
    category: String
    isInstallment: Boolean!
    installmentAmount: BigDecimal
    installmentId: String
    installmentNumber: Int
    creditCardId: Int
}

type MonthClosureDTO {
    month: String!
    year: Int!
    total: BigDecimal!
    available: BigDecimal!
    expenses: BigDecimal!
    index: Int!
    finalUsdToBRL: BigDecimal!
}
