scalar BigDecimal
scalar YearMonth

schema {
    query: Query,
    mutation: Mutation
}

type Query {
    getBalance(yearMonth: YearMonth!): BalanceDTO
    findInvoice(creditCardId: Int!, yearMonth: YearMonth!): InvoiceDTO
    getInstallments(installmentId: String!): [TransactionDTO]
}

type Mutation {
    saveCreditCardTransaction(newTransaction: NewTransactionDTO!): TransactionDTO!
    saveTransaction(newTransaction: NewTransactionDTO!): TransactionDTO!
    saveCreditCard(newCreditCard: NewCreditCardDTO!): CreditCardDTO!
    deleteTransaction(id: Int!, all: Boolean): Boolean!
}

enum TransactionType {
    RECURRING
    DEFAULT
}

type TransactionDTO {
    id: Int
    description: String!
    amount: BigDecimal!
    type: TransactionType!
    date: String!
    category: String
    isInstallment: Boolean!
    installmentAmount: Int
    installmentId: ID
    installmentNumber: Int
    creditCardId: Int
}

input NewTransactionDTO {
    description: String!
    amount: BigDecimal!
    type: TransactionType!
    date: String!
    category: String!
    installmentAmount: Int!
    creditCardId: Int
}

input NewCreditCardDTO {
    title: String!
    description: String!
    number: String!
    invoiceClosingDay: Int!
    color: String
}

type CreditCardDTO {
    id: Int!
    userId: Int!
    title: String!
    description: String!
    invoiceClosingDay: Int!
    totalInvoiceAmount: BigDecimal
    number: String
    color: String
    invoices: [InvoiceDTO]
}

type InvoiceDTO {
    id: Int!
    creditCardId: Int!
    transactions: [TransactionDTO]!
    isClosed: Boolean
    yearMonth: YearMonth
}

type BalanceDTO {
    transactions: [TransactionDTO]!
    lastAddedTransactions: [TransactionDTO]!
    creditCards: [CreditCardDTO]!
    monthClosures: [MonthClosureDTO]
    salary: BigDecimal!
    expenses: BigDecimal!
    available: BigDecimal!
    taxValue: BigDecimal!
    exchangeTaxValue: BigDecimal!
    nonConvertedSalary: BigDecimal!
}

type MonthClosureDTO {
    month: String!
    year: Int!
    total: BigDecimal!
    available: BigDecimal!
    expenses: BigDecimal!
    index: Int!
    finalUsdToBRL: BigDecimal!
}